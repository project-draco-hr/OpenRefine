{
  Column column=project.columnModel.getColumnByName(_columnName);
  return new RowVisitor(){
    int cellIndex;
    List<CellChange> cellChanges;
    Map<String,Recon> _sharedRecons=new HashMap<String,Recon>();
    public RowVisitor init(    int cellIndex,    List<CellChange> cellChanges){
      this.cellIndex=cellIndex;
      this.cellChanges=cellChanges;
      return this;
    }
    public boolean visit(    Project project,    int rowIndex,    Row row,    boolean includeContextual,    boolean includeDependent){
      Cell cell=row.getCell(cellIndex);
      if (cell != null) {
        Recon recon=null;
        if (_shareNewTopics) {
          String s=cell.value == null ? "" : cell.value.toString();
          if (_sharedRecons.containsKey(s)) {
            recon=_sharedRecons.get(s);
          }
 else {
            recon=new Recon();
            recon.judgment=Judgment.New;
            _sharedRecons.put(s,recon);
          }
        }
 else {
          recon=cell.recon == null ? new Recon() : cell.recon.dup();
          recon.match=null;
          recon.judgment=Judgment.New;
        }
        Cell newCell=new Cell(cell.value,recon);
        CellChange cellChange=new CellChange(rowIndex,cellIndex,cell,newCell);
        cellChanges.add(cellChange);
      }
      return false;
    }
  }
.init(column.getCellIndex(),cellChanges);
}
