{
{
    RowVisitor visitor=new RowVisitor(){
      CSVWriter csvWriter;
      boolean columnHeader=true;
      public RowVisitor init(      CSVWriter writer){
        this.csvWriter=writer;
        return this;
      }
      public boolean visit(      Project project,      int rowIndex,      Row row){
        String[] vals=null;
        if (columnHeader) {
          String[] cols=new String[project.columnModel.columns.size()];
          for (int i=0; i < cols.length; i++) {
            cols[i]=project.columnModel.columns.get(i).getName();
          }
          csvWriter.writeNext(cols);
          columnHeader=false;
        }
        vals=new String[row.cells.size()];
        for (int i=0; i < vals.length; i++) {
          Cell cell=row.cells.get(i);
          if (cell != null) {
            vals[i]=row.cells.get(i).value.toString();
          }
        }
        csvWriter.writeNext(vals);
        return false;
      }
      @Override public void start(      Project project){
      }
      @Override public void end(      Project project){
        try {
          csvWriter.close();
        }
 catch (        IOException e) {
          logger.error("CsvExporter could not close writer : " + e.getMessage());
        }
      }
    }
.init(new CSVWriter(writer));
    FilteredRows filteredRows=engine.getAllFilteredRows();
    filteredRows.accept(project,visitor);
  }
}
