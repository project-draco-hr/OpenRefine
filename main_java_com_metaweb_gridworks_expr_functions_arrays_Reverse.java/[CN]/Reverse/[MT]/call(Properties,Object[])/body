{
  if (args.length == 1) {
    Object v=args[0];
    if (v != null && (v.getClass().isArray() || v instanceof List<?>)) {
      int length=v.getClass().isArray() ? ((Object[])v).length : ExpressionUtils.toObjectList(v).size();
      Object[] r=new Object[length];
      if (v.getClass().isArray()) {
        Object[] a=(Object[])v;
        for (int i=0; i < length; i++) {
          r[i]=a[r.length - i - 1];
        }
      }
 else {
        List<Object> a=ExpressionUtils.toObjectList(v);
        for (int i=0; i < length; i++) {
          r[i]=a.get(r.length - i - 1);
        }
      }
      return r;
    }
  }
  return new EvalError(ControlFunctionRegistry.getFunctionName(this) + " expects an array");
}
