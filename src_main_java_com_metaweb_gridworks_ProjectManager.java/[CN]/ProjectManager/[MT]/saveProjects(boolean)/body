{
  List<SaveRecord> records=new ArrayList<SaveRecord>();
  Date now=new Date();
synchronized (this) {
    for (    long id : _projectsMetadata.keySet()) {
      ProjectMetadata metadata=_projectsMetadata.get(id);
      Project project=_projects.get(id);
      if (project != null) {
        boolean hasUnsavedChanges=metadata.getModified().getTime() > project.lastSave.getTime();
        if (hasUnsavedChanges) {
          long msecsOverdue=now.getTime() - project.lastSave.getTime();
          records.add(new SaveRecord(project,msecsOverdue));
        }
 else         if (now.getTime() - project.lastSave.getTime() > 1000 * 60 * 60) {
          _projects.remove(id);
        }
      }
    }
  }
  if (records.size() > 0) {
    Collections.sort(records,new Comparator<SaveRecord>(){
      public int compare(      SaveRecord o1,      SaveRecord o2){
        if (o1.overdue < o2.overdue) {
          return 1;
        }
 else         if (o1.overdue > o2.overdue) {
          return -1;
        }
 else {
          return 0;
        }
      }
    }
);
    Gridworks.log(allModified ? "Saving all modified projects ..." : "Saving some modified projects ...");
    for (int i=0; i < records.size() && (allModified || (new Date().getTime() - now.getTime() < 30000)); i++) {
      try {
        records.get(i).project.save();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
}
