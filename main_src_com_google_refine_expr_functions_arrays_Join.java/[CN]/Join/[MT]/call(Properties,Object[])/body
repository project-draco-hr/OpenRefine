{
  if (args.length == 2) {
    Object v=args[0];
    Object s=args[1];
    if (v != null && s != null && s instanceof String) {
      String separator=(String)s;
      if (v.getClass().isArray() || v instanceof List<?> || v instanceof JSONArray) {
        StringBuffer sb=new StringBuffer();
        if (v.getClass().isArray()) {
          for (          Object o : (Object[])v) {
            if (o != null) {
              if (sb.length() > 0) {
                sb.append(separator);
              }
              sb.append(o.toString());
            }
          }
        }
 else         if (v instanceof JSONArray) {
          JSONArray a=(JSONArray)v;
          int l=a.length();
          for (int i=0; i < l; i++) {
            if (sb.length() > 0) {
              sb.append(separator);
            }
            try {
              sb.append(a.get(i).toString());
            }
 catch (            JSONException e) {
              return new EvalError(ControlFunctionRegistry.getFunctionName(this) + " cannot retrieve element " + i+ " of array");
            }
          }
        }
 else {
          for (          Object o : ExpressionUtils.toObjectList(v)) {
            if (o != null) {
              if (sb.length() > 0) {
                sb.append(separator);
              }
              sb.append(o.toString());
            }
          }
        }
        return sb.toString();
      }
    }
  }
  return new EvalError(ControlFunctionRegistry.getFunctionName(this) + " expects an array and a string");
}
