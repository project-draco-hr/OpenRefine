{
  String inputSeparator=sep == null ? "\t" : sep;
  String input="col1" + inputSeparator + "col2"+ inputSeparator+ "col3\n"+ "data1"+ inputSeparator+ "data2"+ inputSeparator+ "data3"+ inputSeparator+ "data4"+ inputSeparator+ "data5"+ inputSeparator+ "data6";
  try {
    prepareOptions(sep,-1,0,0,1,false,true,false);
    parseOneFile(SUT,new StringReader(input));
  }
 catch (  Exception e) {
    Assert.fail("Exception during file parse",e);
  }
  Assert.assertEquals(project.columnModel.columns.size(),6);
  Assert.assertEquals(project.columnModel.columns.get(0).getName(),"col1");
  Assert.assertEquals(project.columnModel.columns.get(1).getName(),"col2");
  Assert.assertEquals(project.columnModel.columns.get(2).getName(),"col3");
  Assert.assertEquals(project.columnModel.columns.get(3).getName(),"Column 4");
  Assert.assertEquals(project.columnModel.columns.get(4).getName(),"Column 5");
  Assert.assertEquals(project.columnModel.columns.get(5).getName(),"Column 6");
  Assert.assertEquals(project.rows.size(),1);
  Assert.assertEquals(project.rows.get(0).cells.size(),6);
  Assert.assertEquals(project.rows.get(0).cells.get(0).value,"data1");
  Assert.assertEquals(project.rows.get(0).cells.get(1).value,"data2");
  Assert.assertEquals(project.rows.get(0).cells.get(2).value,"data3");
  Assert.assertEquals(project.rows.get(0).cells.get(3).value,"data4");
  Assert.assertEquals(project.rows.get(0).cells.get(4).value,"data5");
  Assert.assertEquals(project.rows.get(0).cells.get(5).value,"data6");
}
