{
  Object o=args[0].evaluate(bindings);
  if (ExpressionUtils.isError(o)) {
    return o;
  }
 else   if (!ExpressionUtils.isArrayOrCollection(o)) {
    return new EvalError("First argument to forEach is not an array");
  }
  String indexName=((VariableExpr)args[1]).getName();
  String elementName=((VariableExpr)args[2]).getName();
  Object oldIndexValue=bindings.get(indexName);
  Object oldElementValue=bindings.get(elementName);
  try {
    List<Object> results=null;
    if (o.getClass().isArray()) {
      Object[] values=(Object[])o;
      results=new ArrayList<Object>(values.length);
      for (int i=0; i < values.length; i++) {
        Object v=values[i];
        bindings.put(indexName,i);
        bindings.put(elementName,v);
        Object r=args[3].evaluate(bindings);
        results.add(r);
      }
    }
 else {
      List<Object> list=ExpressionUtils.toObjectList(o);
      results=new ArrayList<Object>(list.size());
      for (int i=0; i < list.size(); i++) {
        Object v=list.get(i);
        bindings.put(indexName,i);
        bindings.put(elementName,v);
        Object r=args[3].evaluate(bindings);
        results.add(r);
      }
    }
    return results.toArray();
  }
  finally {
    if (oldIndexValue != null) {
      bindings.put(indexName,oldIndexValue);
    }
 else {
      bindings.remove(indexName);
    }
    if (oldElementValue != null) {
      bindings.put(elementName,oldElementValue);
    }
 else {
      bindings.remove(elementName);
    }
  }
}
