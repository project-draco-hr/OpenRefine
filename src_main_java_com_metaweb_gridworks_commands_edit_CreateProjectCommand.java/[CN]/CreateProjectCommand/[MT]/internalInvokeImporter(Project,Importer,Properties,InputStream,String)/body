{
  int limit=getIntegerOption("limit",options,-1);
  int skip=getIntegerOption("skip",options,0);
  if (importer.takesReader()) {
    BufferedInputStream inputStream=new BufferedInputStream(rawInputStream);
    byte[] bytes=new byte[1024 * 4];
    inputStream.mark(bytes.length);
    inputStream.read(bytes);
    inputStream.reset();
    CharsetDetector detector=new CharsetDetector();
    detector.setDeclaredEncoding("utf8");
    Reader reader=null;
    CharsetMatch[] charsetMatches=detector.setText(bytes).detectAll();
    for (    CharsetMatch charsetMatch : charsetMatches) {
      try {
        reader=new InputStreamReader(inputStream,charsetMatch.getName());
        options.setProperty("encoding",charsetMatch.getName());
        options.setProperty("encoding_confidence",Integer.toString(charsetMatch.getConfidence()));
        Gridworks.log("Best encoding guess: " + charsetMatch.getName() + " [confidence: "+ charsetMatch.getConfidence()+ "]");
        break;
      }
 catch (      UnsupportedEncodingException e) {
      }
    }
    if (reader == null) {
      reader=encoding != null ? new InputStreamReader(inputStream,encoding) : new InputStreamReader(inputStream);
    }
    importer.read(reader,project,options,skip,limit);
  }
 else {
    importer.read(rawInputStream,project,options,skip,limit);
  }
}
