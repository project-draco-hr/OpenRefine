{
  int limit=ImporterUtilities.getIntegerOption("limit",options,-1);
  int skip=ImporterUtilities.getIntegerOption("skip",options,0);
  File tempFile;
  try {
    tempFile=File.createTempFile("refine-import-",".marc.xml");
  }
 catch (  IOException e) {
    throw new ImportException("Unexpected error creating temp file",e);
  }
  try {
    OutputStream os=new FileOutputStream(tempFile);
    try {
      MarcPermissiveStreamReader reader=new MarcPermissiveStreamReader(inputStream,true,true);
      MarcWriter writer=new MarcXmlWriter(os,true);
      int count=0;
      while (reader.hasNext()) {
        Record record=reader.next();
        if (skip <= 0) {
          if (limit == -1 || count < limit) {
            writer.write(record);
            count++;
          }
 else {
            break;
          }
        }
 else {
          skip--;
        }
      }
      writer.close();
    }
  finally {
      try {
        os.close();
      }
 catch (      IOException e) {
      }
    }
    InputStream is=new FileInputStream(tempFile);
    try {
      new XmlImporter().read(is,project,metadata,options);
    }
  finally {
      try {
        is.close();
      }
 catch (      IOException e) {
      }
    }
  }
 catch (  FileNotFoundException e) {
    throw new ImportException("Input file not found",e);
  }
 finally {
    tempFile.delete();
  }
}
