{
  ImportColumnGroup thisColumnGroup=getColumnGroup(project,columnGroup,composeName(parser.getPrefix(),parser.getLocalName()));
  thisColumnGroup.nextRowIndex=Math.max(thisColumnGroup.nextRowIndex,columnGroup.nextRowIndex);
  int attributeCount=parser.getAttributeCount();
  for (int i=0; i < attributeCount; i++) {
    String text=parser.getAttributeValue(i).trim();
    if (text.length() > 0) {
      addCell(project,thisColumnGroup,record,composeName(parser.getAttributePrefix(i),parser.getAttributeLocalName(i)),text);
    }
  }
  while (parser.hasNext()) {
    TreeParserToken eventType=parser.next();
    if (eventType == TreeParserToken.StartEntity) {
      processSubRecord(project,parser,thisColumnGroup,record);
    }
 else     if (eventType == TreeParserToken.Value) {
      String text=parser.getText().trim();
      if (text.length() > 0) {
        addCell(project,thisColumnGroup,record,null,parser.getText());
      }
    }
 else     if (eventType == TreeParserToken.EndEntity) {
      break;
    }
  }
  int nextRowIndex=thisColumnGroup.nextRowIndex;
  for (  ImportColumn column2 : thisColumnGroup.columns.values()) {
    nextRowIndex=Math.max(nextRowIndex,column2.nextRowIndex);
  }
  for (  ImportColumnGroup columnGroup2 : thisColumnGroup.subgroups.values()) {
    nextRowIndex=Math.max(nextRowIndex,columnGroup2.nextRowIndex);
  }
  thisColumnGroup.nextRowIndex=nextRowIndex;
}
