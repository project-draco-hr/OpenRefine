{
  Column column=project.columnModel.getColumnByName(_columnName);
  if (column == null) {
    throw new Exception("No column named " + _columnName);
  }
  int cellIndex=column.getCellIndex();
  Column keyColumn=project.columnModel.getColumnByName(_keyColumnName);
  if (column == null) {
    throw new Exception("No key column named " + _keyColumnName);
  }
  int keyCellIndex=keyColumn.getCellIndex();
  List<Row> newRows=new ArrayList<Row>();
  int oldRowCount=project.rows.size();
  for (int r=0; r < oldRowCount; r++) {
    Row oldRow=project.rows.get(r);
    if (oldRow.isCellBlank(cellIndex)) {
      newRows.add(oldRow.dup());
      continue;
    }
    Object value=oldRow.getCellValue(cellIndex);
    String s=value instanceof String ? ((String)value) : value.toString();
    String[] values=null;
    if (_mode.equals("regex")) {
      values=s.split(_separator);
    }
 else {
      values=StringUtils.splitByWholeSeparator(s,_separator);
    }
    if (values.length < 2) {
      newRows.add(oldRow.dup());
      continue;
    }
{
      Row firstNewRow=oldRow.dup();
      firstNewRow.setCell(cellIndex,new Cell(values[0].trim(),null));
      newRows.add(firstNewRow);
    }
    int r2=r + 1;
    for (int v=1; v < values.length; v++) {
      Cell newCell=new Cell(values[v].trim(),null);
      if (r2 < project.rows.size()) {
        Row oldRow2=project.rows.get(r2);
        if (oldRow2.isCellBlank(cellIndex) && oldRow2.isCellBlank(keyCellIndex)) {
          Row newRow=oldRow2.dup();
          newRow.setCell(cellIndex,newCell);
          newRows.add(newRow);
          r2++;
          continue;
        }
      }
      Row newRow=new Row(cellIndex + 1);
      newRow.setCell(cellIndex,newCell);
      newRows.add(newRow);
    }
    r=r2 - 1;
  }
  return new HistoryEntry(project,getBriefDescription(),this,new MassRowChange(newRows));
}
