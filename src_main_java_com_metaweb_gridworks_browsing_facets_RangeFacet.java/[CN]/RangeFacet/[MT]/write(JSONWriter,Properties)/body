{
  writer.object();
  writer.key("name");
  writer.value(_name);
  writer.key("expression");
  writer.value(_expression);
  writer.key("columnName");
  writer.value(_columnName);
  writer.key("mode");
  writer.value(_mode);
  if (_errorMessage != null) {
    writer.key("error");
    writer.value(_errorMessage);
  }
 else {
    if (!Double.isInfinite(_min) && !Double.isInfinite(_max)) {
      writer.key("min");
      writer.value(_min);
      writer.key("max");
      writer.value(_max);
      writer.key("step");
      writer.value(_step);
      writer.key("bins");
      writer.array();
      for (      int b : _bins) {
        writer.value(b);
      }
      writer.endArray();
      writer.key("baseBins");
      writer.array();
      for (      int b : _baseBins) {
        writer.value(b);
      }
      writer.endArray();
      if ("min".equals(_mode)) {
        writer.key("from");
        writer.value(_from);
      }
 else       if ("max".equals(_mode)) {
        writer.key("to");
        writer.value(_to);
      }
 else {
        writer.key("from");
        writer.value(_from);
        writer.key("to");
        writer.value(_to);
      }
    }
    writer.key("numericCount");
    writer.value(_numericCount);
    writer.key("nonNumericCount");
    writer.value(_nonNumericCount);
    writer.key("blankCount");
    writer.value(_blankCount);
    writer.key("errorCount");
    writer.value(_errorCount);
  }
  writer.endObject();
}
