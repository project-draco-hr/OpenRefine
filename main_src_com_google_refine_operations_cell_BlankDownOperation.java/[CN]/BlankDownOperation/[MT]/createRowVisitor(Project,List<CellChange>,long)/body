{
  Column column=project.columnModel.getColumnByName(_columnName);
  return new RowVisitor(){
    int cellIndex;
    List<CellChange> cellChanges;
    Cell previousCell;
    public RowVisitor init(    int cellIndex,    List<CellChange> cellChanges){
      this.cellIndex=cellIndex;
      this.cellChanges=cellChanges;
      return this;
    }
    @Override public void start(    Project project){
    }
    @Override public void end(    Project project){
    }
    public boolean visit(    Project project,    int rowIndex,    Row row){
      Object value=row.getCellValue(cellIndex);
      if (ExpressionUtils.isNonBlankData(value)) {
        Cell cell=row.getCell(cellIndex);
        if (previousCell != null && cell.value.equals(previousCell.value)) {
          CellChange cellChange=new CellChange(rowIndex,cellIndex,cell,null);
          cellChanges.add(cellChange);
        }
        previousCell=cell;
      }
 else {
        previousCell=null;
      }
      return false;
    }
  }
.init(column.getCellIndex(),cellChanges);
}
