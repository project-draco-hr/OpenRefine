{
  try {
    String op=obj.getString("op");
    if (!op.contains("/")) {
      op="core/" + op;
    }
    List<Class<? extends AbstractOperation>> classes=s_opNameToClass.get(op);
    if (classes != null && classes.size() > 0) {
      Class<? extends AbstractOperation> klass=classes.get(classes.size() - 1);
      Method reconstruct=klass.getMethod("reconstruct",Project.class,JSONObject.class);
      if (reconstruct != null) {
        return (AbstractOperation)reconstruct.invoke(null,project,obj);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return null;
}
