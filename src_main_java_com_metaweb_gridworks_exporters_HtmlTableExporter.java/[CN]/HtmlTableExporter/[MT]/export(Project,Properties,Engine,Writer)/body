{
  writer.write("<html>\n");
  writer.write("<head><title>");
  writer.write(ProjectManager.singleton.getProjectMetadata(project.id).getName());
  writer.write("</title></head>\n");
  writer.write("<body>\n");
  writer.write("<table>\n");
  writer.write("<tr>");
{
    for (    Column column : project.columnModel.columns) {
      writer.write("<th>");
      writer.write(column.getName());
      writer.write("</th>");
    }
  }
  writer.write("</tr>\n");
{
    RowVisitor visitor=new RowVisitor(){
      Writer writer;
      public RowVisitor init(      Writer writer){
        this.writer=writer;
        return this;
      }
      @Override public void start(      Project project){
      }
      @Override public void end(      Project project){
      }
      public boolean visit(      Project project,      int rowIndex,      Row row){
        try {
          writer.write("<tr>");
          for (          Column column : project.columnModel.columns) {
            writer.write("<td>");
            int cellIndex=column.getCellIndex();
            if (cellIndex < row.cells.size()) {
              Cell cell=row.cells.get(cellIndex);
              if (cell != null && cell.value != null) {
                Object v=cell.value;
                writer.write(v instanceof String ? ((String)v) : v.toString());
              }
            }
            writer.write("</td>");
          }
          writer.write("</tr>\n");
        }
 catch (        IOException e) {
        }
        return false;
      }
    }
.init(writer);
    FilteredRows filteredRows=engine.getAllFilteredRows();
    filteredRows.accept(project,visitor);
  }
  writer.write("</table>\n");
  writer.write("</body>\n");
  writer.write("</html>\n");
}
