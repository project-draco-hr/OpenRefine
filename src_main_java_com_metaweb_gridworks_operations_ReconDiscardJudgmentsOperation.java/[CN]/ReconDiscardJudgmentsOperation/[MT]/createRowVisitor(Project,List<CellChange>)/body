{
  Column column=project.columnModel.getColumnByName(_columnName);
  return new RowVisitor(){
    int cellIndex;
    List<CellChange> cellChanges;
    public RowVisitor init(    int cellIndex,    List<CellChange> cellChanges){
      this.cellIndex=cellIndex;
      this.cellChanges=cellChanges;
      return this;
    }
    public boolean visit(    Project project,    int rowIndex,    Row row,    boolean contextual){
      if (cellIndex < row.cells.size()) {
        Cell cell=row.cells.get(cellIndex);
        if (cell.recon != null) {
          Recon recon=cell.recon.dup();
          recon.judgment=Judgment.None;
          Cell newCell=new Cell(cell.value,recon);
          CellChange cellChange=new CellChange(rowIndex,cellIndex,cell,newCell);
          cellChanges.add(cellChange);
        }
      }
      return false;
    }
  }
.init(column.getCellIndex(),cellChanges);
}
