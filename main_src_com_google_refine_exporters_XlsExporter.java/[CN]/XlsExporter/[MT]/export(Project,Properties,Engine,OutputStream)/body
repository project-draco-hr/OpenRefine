{
  final Workbook wb=xml ? new XSSFWorkbook() : new HSSFWorkbook();
  TabularSerializer serializer=new TabularSerializer(){
    Sheet s;
    int rowCount=0;
    CellStyle dateStyle;
    @Override public void startFile(    JSONObject options){
      s=wb.createSheet();
      wb.setSheetName(0,ProjectManager.singleton.getProjectMetadata(project.id).getName());
      dateStyle=wb.createCellStyle();
      dateStyle.setDataFormat(wb.getCreationHelper().createDataFormat().getFormat("YYYY-MM-DD"));
    }
    @Override public void endFile(){
    }
    @Override public void addRow(    List<CellData> cells,    boolean isHeader){
      Row r=s.createRow(rowCount++);
      for (int i=0; i < cells.size(); i++) {
        Cell c=r.createCell(i);
        if (i == 255 && cells.size() > 256) {
          c.setCellValue("ERROR: TOO MANY COLUMNS");
        }
 else {
          CellData cellData=cells.get(i);
          if (cellData != null && cellData.text != null && cellData.value != null) {
            Object v=cellData.value;
            if (v instanceof Number) {
              c.setCellValue(((Number)v).doubleValue());
            }
 else             if (v instanceof Boolean) {
              c.setCellValue(((Boolean)v).booleanValue());
            }
 else             if (v instanceof Date) {
              c.setCellValue((Date)v);
              c.setCellStyle(dateStyle);
            }
 else             if (v instanceof Calendar) {
              c.setCellValue((Calendar)v);
              c.setCellStyle(dateStyle);
            }
 else {
              String s=cellData.text;
              if (s.length() > 32767) {
                s=s.substring(0,32767);
              }
              c.setCellValue(s);
            }
            if (cellData.link != null) {
              HSSFHyperlink hl=new HSSFHyperlink(HSSFHyperlink.LINK_URL);
              hl.setLabel(cellData.text);
              hl.setAddress(cellData.link);
            }
          }
        }
      }
    }
  }
;
  CustomizableTabularExporterUtilities.exportRows(project,engine,params,serializer);
  wb.write(outputStream);
  outputStream.flush();
}
