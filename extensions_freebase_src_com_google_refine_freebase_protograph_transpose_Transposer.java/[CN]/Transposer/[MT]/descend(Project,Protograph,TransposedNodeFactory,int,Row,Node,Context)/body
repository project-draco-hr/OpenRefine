{
  List<TransposedNode> tnodes=new LinkedList<TransposedNode>();
  TransposedNode parentNode=context.parent == null ? null : context.parent.transposedNode;
  Link link=context.parent == null ? null : context.link;
  if (node instanceof CellNode) {
    CellNode node2=(CellNode)node;
    for (    String columnName : node2.columnNames) {
      Column column=project.columnModel.getColumnByName(columnName);
      if (column != null) {
        int cellIndex=column.getCellIndex();
        Cell cell=row.getCell(cellIndex);
        if (cell != null && ExpressionUtils.isNonBlankData(cell.value)) {
          if (node2 instanceof CellTopicNode && (cell.recon == null || cell.recon.judgment == Judgment.None)) {
            return;
          }
          context.count++;
          if (context.limit > 0 && context.count > context.limit) {
            return;
          }
          tnodes.add(nodeFactory.transposeCellNode(parentNode,link,node2,rowIndex,cellIndex,cell));
        }
      }
    }
  }
 else {
    if (node instanceof AnonymousNode) {
      tnodes.add(nodeFactory.transposeAnonymousNode(parentNode,link,(AnonymousNode)node,rowIndex));
    }
 else     if (node instanceof FreebaseTopicNode) {
      tnodes.add(nodeFactory.transposeTopicNode(parentNode,link,(FreebaseTopicNode)node,rowIndex));
    }
 else     if (node instanceof ValueNode) {
      tnodes.add(nodeFactory.transposeValueNode(parentNode,link,(ValueNode)node,rowIndex));
    }
  }
  if (node instanceof NodeWithLinks) {
    NodeWithLinks node2=(NodeWithLinks)node;
    int linkCount=node2.getLinkCount();
    for (int i=0; i < linkCount; i++) {
      Link link2=node2.getLink(i);
      if (link2.condition == null || link2.condition.test(project,rowIndex,row)) {
        for (        TransposedNode tnode : tnodes) {
          context.transposedNode=tnode;
          context.nullifySubContextNodes();
          descend(project,protograph,nodeFactory,rowIndex,row,link2.getTarget(),context.subContexts.get(i));
        }
      }
    }
  }
}
