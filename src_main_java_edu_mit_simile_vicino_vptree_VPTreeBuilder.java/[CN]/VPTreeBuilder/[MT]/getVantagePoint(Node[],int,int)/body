{
  if (OPTIMIZED) {
    Node buffer[]=new Node[sample_size];
    for (int i=0; i < sample_size; i++) {
      buffer[i]=getRandomNode(nodes,begin,end);
    }
    double bestSpread=0;
    Node bestNode=buffer[0];
    for (int i=0; i < sample_size; i++) {
      calculateDistances(new TNode(buffer[i]),buffer,0,buffer.length - 1);
      orderDistances(nodes,begin,end);
      double median=(double)median(nodes,begin,end);
      double spread=deviation(buffer,median);
      System.out.println(" " + spread);
      if (spread > bestSpread) {
        bestSpread=spread;
        bestNode=buffer[i];
      }
    }
    System.out.println("best: " + bestSpread);
    return bestNode;
  }
 else {
    return getRandomNode(nodes,begin,end);
  }
}
