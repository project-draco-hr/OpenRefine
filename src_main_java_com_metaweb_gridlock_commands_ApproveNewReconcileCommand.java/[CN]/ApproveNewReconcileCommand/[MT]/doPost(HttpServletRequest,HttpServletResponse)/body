{
  try {
    Project project=getProject(request);
    Engine engine=getEngine(request,project);
    int cellIndex=Integer.parseInt(request.getParameter("cell"));
    Column column=project.columnModel.getColumnByCellIndex(cellIndex);
    if (column == null) {
      respond(response,"{ \"code\" : \"error\", \"message\" : \"No such column\" }");
      return;
    }
    String columnName=column.headerLabel;
    List<CellChange> cellChanges=new ArrayList<CellChange>(project.rows.size());
    FilteredRows filteredRows=engine.getAllFilteredRows();
    filteredRows.accept(project,new RowVisitor(){
      int cellIndex;
      List<CellChange> cellChanges;
      public RowVisitor init(      int cellIndex,      List<CellChange> cellChanges){
        this.cellIndex=cellIndex;
        this.cellChanges=cellChanges;
        return this;
      }
      @Override public boolean visit(      Project project,      int rowIndex,      Row row){
        if (cellIndex < row.cells.size()) {
          Cell cell=row.cells.get(cellIndex);
          Cell newCell=new Cell();
          newCell.value=cell.value;
          newCell.recon=cell.recon != null ? cell.recon.dup() : new Recon();
          newCell.recon.match=null;
          newCell.recon.judgment=Judgment.New;
          CellChange cellChange=new CellChange(rowIndex,cellIndex,cell,newCell);
          cellChanges.add(cellChange);
        }
        return false;
      }
    }
.init(cellIndex,cellChanges));
    MassCellChange massCellChange=new MassCellChange(cellChanges);
    HistoryEntry historyEntry=new HistoryEntry(project,"Approve new topics for " + columnName,massCellChange);
    boolean done=project.processManager.queueProcess(new QuickHistoryEntryProcess(project,historyEntry));
    respond(response,"{ \"code\" : " + (done ? "\"ok\"" : "\"pending\"") + " }");
  }
 catch (  Exception e) {
    respondException(response,e);
  }
}
