{
  List<ColumnDetail> columnDetails=null;
  if (obj.has("columnDetails")) {
    JSONArray columnDetailsA=obj.getJSONArray("columnDetails");
    int l=columnDetailsA.length();
    columnDetails=new ArrayList<ColumnDetail>(l);
    for (int i=0; i < l; i++) {
      JSONObject o=columnDetailsA.getJSONObject(i);
      if (o.has("property")) {
        JSONObject p=o.getJSONObject("property");
        columnDetails.add(new ColumnDetail(o.getString("column"),p.has("name") ? p.getString("name") : null,p.has("id") ? p.getString("id") : null));
      }
 else {
        columnDetails.add(new ColumnDetail(o.getString("column"),o.has("propertyName") ? o.getString("propertyName") : null,o.has("propertyID") ? o.getString("propertyID") : null));
      }
    }
  }
 else {
    columnDetails=new ArrayList<ColumnDetail>();
  }
  JSONObject t=obj.has("type") && !obj.isNull("type") ? obj.getJSONObject("type") : null;
  return new StandardReconConfig(obj.getString("service"),obj.has("identifierSpace") ? obj.getString("identifierSpace") : null,obj.has("schemaSpace") ? obj.getString("schemaSpace") : null,t == null ? null : t.getString("id"),t == null ? null : (t.has("name") ? t.getString("name") : null),obj.getBoolean("autoMatch"),columnDetails);
}
