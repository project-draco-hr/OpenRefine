{
  Object o=args[0].evaluate(bindings);
  if (ExpressionUtils.isError(o)) {
    return o;
  }
 else   if (o == null || (!o.getClass().isArray() && !(o instanceof Iterable<?>))) {
    return new EvalError("First argument to forEach is not an array");
  }
  String name=((VariableExpr)args[1]).getName();
  Object oldValue=bindings.get(name);
  try {
    List<Object> results=null;
    if (o.getClass().isArray()) {
      Object[] values=(Object[])o;
      results=new ArrayList<Object>(values.length);
      for (      Object v : values) {
        bindings.put(name,v);
        Object r=args[2].evaluate(bindings);
        results.add(r);
      }
    }
 else {
      results=o instanceof Collection<?> ? new ArrayList<Object>(ExpressionUtils.toObjectCollection(o).size()) : new ArrayList<Object>();
      Iterator<Object> i=ExpressionUtils.toObjectCollection(o).iterator();
      while (i.hasNext()) {
        Object v=i.next();
        bindings.put(name,v);
        Object r=args[2].evaluate(bindings);
        results.add(r);
      }
    }
    return results.toArray();
  }
  finally {
    if (oldValue != null) {
      bindings.put(name,oldValue);
    }
 else {
      bindings.remove(name);
    }
  }
}
