{
  JSONObject result=new JSONObject();
{
    String name=parser.getLocalName();
    JSONUtilities.safePut(result,"n",name);
    String prefix=parser.getPrefix();
    if (prefix != null) {
      JSONUtilities.safePut(result,"p",prefix);
    }
    String nsUri=parser.getNamespaceURI();
    if (nsUri != null) {
      JSONUtilities.safePut(result,"uri",nsUri);
    }
  }
  int namespaceCount=parser.getNamespaceCount();
  if (namespaceCount > 0) {
    JSONArray namespaces=new JSONArray();
    JSONUtilities.safePut(result,"ns",namespaces);
    for (int i=0; i < namespaceCount; i++) {
      JSONObject namespace=new JSONObject();
      JSONUtilities.append(namespaces,namespace);
      JSONUtilities.safePut(namespace,"p",parser.getNamespacePrefix(i));
      JSONUtilities.safePut(namespace,"uri",parser.getNamespaceURI(i));
    }
  }
  int attributeCount=parser.getAttributeCount();
  if (attributeCount > 0) {
    JSONArray attributes=new JSONArray();
    JSONUtilities.safePut(result,"a",attributes);
    for (int i=0; i < attributeCount; i++) {
      JSONObject attribute=new JSONObject();
      JSONUtilities.append(attributes,attribute);
      JSONUtilities.safePut(attribute,"n",parser.getAttributeLocalName(i));
      JSONUtilities.safePut(attribute,"v",parser.getAttributeValue(i));
      String prefix=parser.getAttributePrefix(i);
      if (prefix != null) {
        JSONUtilities.safePut(attribute,"p",prefix);
      }
    }
  }
  JSONArray children=new JSONArray();
  try {
    while (parser.hasNext() && state.tokenCount < PREVIEW_PARSING_LIMIT) {
      int tokenType=parser.next();
      state.tokenCount++;
      if (tokenType == XMLStreamConstants.END_ELEMENT) {
        break;
      }
 else       if (tokenType == XMLStreamConstants.START_ELEMENT) {
        JSONObject childElement=descendElement(parser,state);
        if (childElement != null) {
          JSONUtilities.append(children,childElement);
        }
      }
 else       if (tokenType == XMLStreamConstants.CHARACTERS || tokenType == XMLStreamConstants.CDATA || tokenType == XMLStreamConstants.SPACE) {
        JSONObject childElement=new JSONObject();
        JSONUtilities.safePut(childElement,"t",parser.getText());
        JSONUtilities.append(children,childElement);
      }
 else {
      }
    }
  }
 catch (  XMLStreamException e) {
    logger.error("Error generating parser UI initialization data for XML file",e);
  }
  if (children.length() > 0) {
    JSONUtilities.safePut(result,"c",children);
  }
  return result;
}
