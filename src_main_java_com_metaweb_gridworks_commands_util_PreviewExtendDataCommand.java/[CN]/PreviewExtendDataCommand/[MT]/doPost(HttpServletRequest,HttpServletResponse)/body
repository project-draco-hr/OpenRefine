{
  try {
    Project project=getProject(request);
    String columnName=request.getParameter("columnName");
    String rowIndicesString=request.getParameter("rowIndices");
    if (rowIndicesString == null) {
      respond(response,"{ \"code\" : \"error\", \"message\" : \"No row indices specified\" }");
      return;
    }
    String jsonString=request.getParameter("extension");
    JSONObject json=jsonStringToObject(jsonString);
    JSONArray rowIndices=jsonStringToArray(rowIndicesString);
    int length=rowIndices.length();
    int cellIndex=project.columnModel.getColumnByName(columnName).getCellIndex();
    List<String> topicNames=new ArrayList<String>();
    List<String> topicGuids=new ArrayList<String>();
    Set<String> guids=new HashSet<String>();
    for (int i=0; i < length; i++) {
      int rowIndex=rowIndices.getInt(i);
      if (rowIndex >= 0 && rowIndex < project.rows.size()) {
        Row row=project.rows.get(rowIndex);
        Cell cell=row.getCell(cellIndex);
        if (cell != null && cell.recon != null && cell.recon.match != null) {
          topicNames.add(cell.recon.match.topicName);
          topicGuids.add(cell.recon.match.topicGUID);
          guids.add(cell.recon.match.topicGUID);
        }
      }
    }
    FreebaseDataExtensionJob job=new FreebaseDataExtensionJob(json);
    Map<String,DataExtension> map=job.extend(guids);
    response.setCharacterEncoding("UTF-8");
    response.setHeader("Content-Type","application/json");
    JSONWriter writer=new JSONWriter(response.getWriter());
    writer.object();
    writer.key("columns");
    writer.array();
    for (    String name : job.columnNames) {
      writer.value(name);
    }
    writer.endArray();
    writer.key("rows");
    writer.array();
    for (int r=0; r < topicNames.size(); r++) {
      String guid=topicGuids.get(r);
      String topicName=topicNames.get(r);
      if (map.containsKey(guid)) {
        DataExtension ext=map.get(guid);
        boolean first=true;
        if (ext.data.length > 0) {
          for (          Object[] row : ext.data) {
            writer.array();
            if (first) {
              writer.value(topicName);
              first=false;
            }
 else {
              writer.value(null);
            }
            for (            Object cell : row) {
              if (cell != null && cell instanceof ReconCandidate) {
                ReconCandidate rc=(ReconCandidate)cell;
                writer.object();
                writer.key("id");
                writer.value(rc.topicID);
                writer.key("name");
                writer.value(rc.topicName);
                writer.endObject();
              }
 else {
                writer.value(cell);
              }
            }
            writer.endArray();
          }
          continue;
        }
      }
      writer.array();
      writer.value(topicName);
      writer.endArray();
    }
    writer.endArray();
    writer.endObject();
  }
 catch (  Exception e) {
    respondException(response,e);
  }
}
