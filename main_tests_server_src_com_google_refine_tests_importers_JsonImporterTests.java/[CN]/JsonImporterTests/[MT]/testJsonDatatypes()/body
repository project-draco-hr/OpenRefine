{
  RunTest(getSampleWithDataTypes());
  log(project);
  assertProjectCreated(project,2,21,4);
  Assert.assertEquals(project.columnModel.getColumnByCellIndex(0).getName(),JsonImporter.ANONYMOUS + " - id");
  Assert.assertEquals(project.columnModel.getColumnByCellIndex(1).getName(),JsonImporter.ANONYMOUS + " - cell - cell");
  Row row=project.rows.get(8);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertEquals(row.cells.get(1).value,"");
  row=project.rows.get(12);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertNull(row.cells.get(1).value);
  row=project.rows.get(13);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertEquals(row.cells.get(1).value,Boolean.TRUE);
  row=project.rows.get(14);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertEquals(row.cells.get(1).value,Boolean.FALSE);
  row=project.rows.get(15);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertEquals(row.cells.get(1).value,Long.valueOf(0));
  row=project.rows.get(16);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertEquals(row.cells.get(1).value,Long.valueOf(1));
  row=project.rows.get(17);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertEquals(row.cells.get(1).value,Double.parseDouble("-2.1"));
  row=project.rows.get(18);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertEquals(row.cells.get(1).value,Double.valueOf((double)0.23));
  row=project.rows.get(19);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertEquals(row.cells.get(1).value,Double.valueOf((double)-0.24));
  row=project.rows.get(20);
  Assert.assertNotNull(row);
  Assert.assertEquals(row.cells.size(),2);
  Assert.assertFalse(Double.isNaN((Double)row.cells.get(1).value));
  Assert.assertEquals(row.cells.get(1).value,Double.valueOf((double)3.14e100));
}
