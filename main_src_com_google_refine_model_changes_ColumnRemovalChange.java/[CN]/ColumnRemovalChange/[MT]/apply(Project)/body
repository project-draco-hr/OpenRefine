{
synchronized (project) {
    int columnGroupCount=project.columnModel.columnGroups.size();
    _oldColumnGroups=new ArrayList<ColumnGroup>(columnGroupCount);
    for (int i=columnGroupCount - 1; i >= 0; i--) {
      ColumnGroup columnGroup=project.columnModel.columnGroups.get(i);
      _oldColumnGroups.add(columnGroup);
      if (columnGroup.startColumnIndex <= _oldColumnIndex) {
        if (columnGroup.startColumnIndex + columnGroup.columnSpan > _oldColumnIndex) {
          if (columnGroup.keyColumnIndex == _oldColumnIndex) {
            project.columnModel.columnGroups.remove(i);
          }
 else {
            project.columnModel.columnGroups.set(i,new ColumnGroup(columnGroup.startColumnIndex,columnGroup.columnSpan - 1,columnGroup.keyColumnIndex < _oldColumnIndex ? columnGroup.keyColumnIndex : (columnGroup.keyColumnIndex - 1)));
          }
        }
      }
 else {
        project.columnModel.columnGroups.set(i,new ColumnGroup(columnGroup.startColumnIndex - 1,columnGroup.columnSpan,columnGroup.keyColumnIndex - 1));
      }
    }
    _oldColumn=project.columnModel.columns.remove(_oldColumnIndex);
    _oldCells=new CellAtRow[project.rows.size()];
    int cellIndex=_oldColumn.getCellIndex();
    for (int i=0; i < _oldCells.length; i++) {
      Row row=project.rows.get(i);
      Cell oldCell=null;
      if (cellIndex < row.cells.size()) {
        oldCell=row.cells.get(cellIndex);
      }
      _oldCells[i]=new CellAtRow(i,oldCell);
      row.setCell(cellIndex,null);
    }
    project.update();
  }
}
