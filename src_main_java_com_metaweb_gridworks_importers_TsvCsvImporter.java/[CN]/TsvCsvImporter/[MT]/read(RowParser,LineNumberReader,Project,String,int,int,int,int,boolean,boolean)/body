{
  List<String> columnNames=new ArrayList<String>();
  String line=null;
  int rowsWithData=0;
  while ((line=lnReader.readLine()) != null) {
    if (ignoreLines > 0) {
      ignoreLines--;
      continue;
    }
 else     if (StringUtils.isBlank(line)) {
      continue;
    }
    if (parser == null) {
      if (splitIntoColumns) {
        int tab=line.indexOf('\t');
        if (tab >= 0) {
          sep="\t";
          parser=new TsvCsvRowParser('\t');
        }
 else {
          sep=",";
          parser=new TsvCsvRowParser(',');
        }
      }
 else {
        parser=new NonSplitRowParser();
      }
    }
    if (headerLines > 0) {
      headerLines--;
      List<String> cells=parser.split(line,lnReader);
      for (int c=0; c < cells.size(); c++) {
        String cell=cells.get(c).trim();
        ImporterUtilities.appendColumnName(columnNames,c,cell);
      }
    }
 else {
      Row row=new Row(columnNames.size());
      if (parser.parseRow(row,line,guessValueType,lnReader)) {
        rowsWithData++;
        if (skip <= 0 || rowsWithData > skip) {
          project.rows.add(row);
          project.columnModel.setMaxCellIndex(row.cells.size());
          ImporterUtilities.ensureColumnsInRowExist(columnNames,row);
          if (limit > 0 && project.rows.size() >= limit) {
            break;
          }
        }
      }
    }
  }
  ImporterUtilities.setupColumns(project,columnNames);
}
