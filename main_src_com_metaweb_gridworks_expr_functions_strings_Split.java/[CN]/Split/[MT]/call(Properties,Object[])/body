{
  if (args.length >= 2 && args.length <= 3) {
    boolean preserveAllTokens=false;
    Object v=args[0];
    Object split=args[1];
    if (args.length == 3) {
      Object preserve=args[2];
      if (preserve instanceof Boolean) {
        preserveAllTokens=((Boolean)preserve);
      }
    }
    if (v != null && split != null) {
      String str=(v instanceof String ? (String)v : v.toString());
      if (split instanceof String) {
        return preserveAllTokens ? StringUtils.splitByWholeSeparatorPreserveAllTokens(str,(String)split) : StringUtils.splitByWholeSeparator(str,(String)split);
      }
 else       if (split instanceof Pattern) {
        Pattern pattern=(Pattern)split;
        return pattern.split(str);
      }
    }
  }
  return new EvalError(ControlFunctionRegistry.getFunctionName(this) + " expects 2 strings, or 1 string and 1 regex, followed by an optional boolean");
}
