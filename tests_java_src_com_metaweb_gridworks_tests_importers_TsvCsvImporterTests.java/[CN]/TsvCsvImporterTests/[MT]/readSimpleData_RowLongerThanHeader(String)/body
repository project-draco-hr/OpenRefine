{
  String input="col1,col2,col3\n" + "data1,data2,data3,data4,data5,data6";
  LineNumberReader lnReader=new LineNumberReader(new StringReader(input));
  try {
    SUT.read(lnReader,project,sep,-1,0,0,1,false,true);
  }
 catch (  IOException e) {
    Assert.fail();
  }
  Assert.assertEquals(project.columnModel.columns.size(),6);
  Assert.assertEquals(project.columnModel.columns.get(0).getName(),"col1");
  Assert.assertEquals(project.columnModel.columns.get(1).getName(),"col2");
  Assert.assertEquals(project.columnModel.columns.get(2).getName(),"col3");
  Assert.assertEquals(project.columnModel.columns.get(3).getName(),"Column");
  Assert.assertEquals(project.columnModel.columns.get(3).getName(),"Column");
  Assert.assertEquals(project.columnModel.columns.get(3).getName(),"Column");
  Assert.assertEquals(project.rows.size(),1);
  Assert.assertEquals(project.rows.get(0).cells.size(),6);
  Assert.assertEquals(project.rows.get(0).cells.get(0).value,"data1");
  Assert.assertEquals(project.rows.get(0).cells.get(1).value,"data2");
  Assert.assertEquals(project.rows.get(0).cells.get(2).value,"data3");
  Assert.assertEquals(project.rows.get(0).cells.get(3).value,"data4");
  Assert.assertEquals(project.rows.get(0).cells.get(4).value,"data5");
  Assert.assertEquals(project.rows.get(0).cells.get(5).value,"data6");
}
