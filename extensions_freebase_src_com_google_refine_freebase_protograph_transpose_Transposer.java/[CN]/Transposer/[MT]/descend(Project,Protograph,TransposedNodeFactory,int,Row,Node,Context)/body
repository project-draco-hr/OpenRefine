{
  List<TransposedNode> tnodes=new LinkedList<TransposedNode>();
  Link link=context.parent == null ? null : context.link;
  if (node instanceof CellNode) {
    CellNode node2=(CellNode)node;
    for (    String columnName : node2.columnNames) {
      Column column=project.columnModel.getColumnByName(columnName);
      if (column != null) {
        int cellIndex=column.getCellIndex();
        Cell cell=row.getCell(cellIndex);
        if (cell != null && ExpressionUtils.isNonBlankData(cell.value)) {
          System.err.println("row " + rowIndex + " non-blank column "+ columnName);
          if (node2 instanceof CellTopicNode && (cell.recon == null || cell.recon.judgment == Judgment.None)) {
            return;
          }
          context.count++;
          if (context.limit > 0 && context.count > context.limit) {
            return;
          }
          if (context.parent == null) {
            tnodes.add(nodeFactory.transposeCellNode(null,link,node2,rowIndex,cellIndex,cell));
          }
 else {
            for (            TransposedNode parentNode : context.parent.transposedNodes) {
              tnodes.add(nodeFactory.transposeCellNode(parentNode,link,node2,rowIndex,cellIndex,cell));
            }
          }
        }
 else {
          System.err.println("row " + rowIndex + " blank column "+ columnName);
        }
      }
    }
  }
 else {
    if (node instanceof AnonymousNode) {
      if (context.parent == null) {
        tnodes.add(nodeFactory.transposeAnonymousNode(null,link,(AnonymousNode)node,rowIndex));
      }
 else {
        for (        TransposedNode parentNode : context.parent.transposedNodes) {
          tnodes.add(nodeFactory.transposeAnonymousNode(parentNode,link,(AnonymousNode)node,rowIndex));
        }
      }
    }
 else     if (node instanceof FreebaseTopicNode) {
      if (context.parent == null) {
        tnodes.add(nodeFactory.transposeTopicNode(null,link,(FreebaseTopicNode)node,rowIndex));
      }
 else {
        for (        TransposedNode parentNode : context.parent.transposedNodes) {
          tnodes.add(nodeFactory.transposeTopicNode(parentNode,link,(FreebaseTopicNode)node,rowIndex));
        }
      }
    }
 else     if (node instanceof ValueNode) {
      if (context.parent == null) {
        tnodes.add(nodeFactory.transposeValueNode(null,link,(ValueNode)node,rowIndex));
      }
 else {
        for (        TransposedNode parentNode : context.parent.transposedNodes) {
          tnodes.add(nodeFactory.transposeValueNode(parentNode,link,(ValueNode)node,rowIndex));
        }
      }
    }
  }
  if (tnodes.size() > 0) {
    context.transposedNodes.clear();
    context.transposedNodes.addAll(tnodes);
  }
  if (node instanceof NodeWithLinks) {
    NodeWithLinks node2=(NodeWithLinks)node;
    int linkCount=node2.getLinkCount();
    for (int i=0; i < linkCount; i++) {
      Link link2=node2.getLink(i);
      if (link2.condition == null || link2.condition.test(project,rowIndex,row)) {
        System.err.println("  row " + rowIndex + " descend "+ link2.property.id);
        descend(project,protograph,nodeFactory,rowIndex,row,link2.getTarget(),context.subContexts.get(i));
      }
    }
  }
}
