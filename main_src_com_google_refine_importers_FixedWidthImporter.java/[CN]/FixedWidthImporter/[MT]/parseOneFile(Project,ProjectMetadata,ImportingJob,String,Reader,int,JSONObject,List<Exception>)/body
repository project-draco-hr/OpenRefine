{
  final int[] columnWidths=JSONUtilities.getIntArray(options,"columnWidths");
  final List<Object> columnNames;
  if (options.has("columnNames")) {
    columnNames=new ArrayList<Object>();
    String[] strings=JSONUtilities.getStringArray(options,"columnNames");
    for (    String s : strings) {
      columnNames.add(s);
    }
    JSONUtilities.safePut(options,"headerLines",1);
  }
 else {
    columnNames=null;
  }
  final LineNumberReader lnReader=new LineNumberReader(reader);
  TableDataReader dataReader=new TableDataReader(){
    boolean usedColumnNames=false;
    @Override public List<Object> getNextRowOfCells() throws IOException {
      if (columnNames != null && !usedColumnNames) {
        usedColumnNames=true;
        return columnNames;
      }
 else {
        String line=lnReader.readLine();
        if (line == null) {
          return null;
        }
 else {
          return getCells(line,columnWidths);
        }
      }
    }
  }
;
  readTable(project,metadata,job,dataReader,fileSource,limit,options,exceptions);
}
