{
  Column column=project.columnModel.getColumnByName(_baseColumnName);
  Evaluable eval=MetaParser.parse(_expression);
  Properties bindings=ExpressionUtils.createBindings(project);
  return new RowVisitor(){
    int cellIndex;
    Properties bindings;
    List<CellAtRow> cellsAtRows;
    Evaluable eval;
    public RowVisitor init(    int cellIndex,    Properties bindings,    List<CellAtRow> cellsAtRows,    Evaluable eval){
      this.cellIndex=cellIndex;
      this.bindings=bindings;
      this.cellsAtRows=cellsAtRows;
      this.eval=eval;
      return this;
    }
    public boolean visit(    Project project,    int rowIndex,    Row row,    boolean contextual){
      Cell cell=row.getCell(cellIndex);
      ExpressionUtils.bind(bindings,row,rowIndex,cell);
      Object v=eval.evaluate(bindings);
      if (ExpressionUtils.isNonBlankData(v)) {
        Cell newCell=new Cell(v,null);
        cellsAtRows.add(new CellAtRow(rowIndex,newCell));
      }
      return false;
    }
  }
.init(column.getCellIndex(),bindings,cellsAtRows,eval);
}
