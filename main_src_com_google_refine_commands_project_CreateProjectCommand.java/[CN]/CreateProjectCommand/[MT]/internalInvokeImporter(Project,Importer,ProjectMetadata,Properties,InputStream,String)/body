{
  if (importer instanceof ReaderImporter) {
    BufferedInputStream inputStream=new BufferedInputStream(rawInputStream);
    byte[] bytes=new byte[1024 * 4];
    inputStream.mark(bytes.length);
    inputStream.read(bytes);
    inputStream.reset();
    CharsetDetector detector=new CharsetDetector();
    detector.setDeclaredEncoding("utf8");
    options.setProperty("encoding_confidence","0");
    InputStreamReader reader=null;
    CharsetMatch[] charsetMatches=detector.setText(bytes).detectAll();
    if (charsetMatches.length > 0) {
      CharsetMatch charsetMatch=charsetMatches[0];
      int confidence=charsetMatch.getConfidence();
      if (confidence >= 20) {
        try {
          reader=new InputStreamReader(inputStream,charsetMatch.getName());
        }
 catch (        UnsupportedEncodingException e) {
        }
        options.setProperty("encoding_confidence",Integer.toString(confidence));
        logger.info("Best encoding guess: {} [confidence: {}]",charsetMatch.getName(),charsetMatch.getConfidence());
      }
 else {
        logger.debug("Poor encoding guess: {} [confidence: {}]",charsetMatch.getName(),charsetMatch.getConfidence());
      }
    }
    if (reader == null) {
      if (encoding != null) {
        reader=new InputStreamReader(inputStream,encoding);
      }
 else {
        reader=new InputStreamReader(inputStream);
      }
    }
    options.setProperty("encoding",reader.getEncoding());
    ((ReaderImporter)importer).read(reader,project,metadata,options);
  }
 else {
    options.setProperty("encoding",encoding);
    options.setProperty("encoding_confidence","0");
    ((StreamImporter)importer).read(rawInputStream,project,metadata,options);
  }
}
