{
  URL cellFeedUrl=worksheet.getCellFeedUrl();
  int minRow=startRow;
  int maxRow=Math.min(worksheet.getRowCount(),startRow + rowCount - 1);
  int cols=worksheet.getColCount();
  int rows=worksheet.getRowCount();
  CellQuery cellQuery=new CellQuery(cellFeedUrl);
  cellQuery.setMinimumRow(minRow);
  cellQuery.setMaximumRow(maxRow);
  cellQuery.setMaximumCol(cols);
  cellQuery.setMaxResults(rows * cols);
  cellQuery.setReturnEmpty(false);
  CellFeed cellFeed=service.query(cellQuery,CellFeed.class);
  List<CellEntry> cellEntries=cellFeed.getEntries();
  List<List<Object>> rowsOfCells=new ArrayList<List<Object>>(rowCount);
  for (  CellEntry cellEntry : cellEntries) {
    Cell cell=cellEntry.getCell();
    if (cell != null) {
      int row=cell.getRow() - startRow;
      int col=cell.getCol() - 1;
      while (row >= rowsOfCells.size()) {
        rowsOfCells.add(new ArrayList<Object>());
      }
      List<Object> rowOfCells=rowsOfCells.get(row);
      while (col >= rowOfCells.size()) {
        rowOfCells.add(null);
      }
      rowOfCells.set(col,cell.getValue());
    }
  }
  return rowsOfCells;
}
