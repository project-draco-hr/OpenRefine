{
  String limitString=options.getProperty("limit");
  int limit=limitString != null ? Integer.parseInt(limitString) : -1;
  JSONObject sortingJson=null;
  try {
    String json=options.getProperty("sorting");
    sortingJson=(json == null) ? null : ParsingUtilities.evaluateJsonStringToObject(json);
  }
 catch (  JSONException e) {
  }
  Template template;
  try {
    template=Parser.parse(options.getProperty("template"));
  }
 catch (  ParsingException e) {
    throw new IOException("Missing or bad template",e);
  }
  template.setPrefix(options.getProperty("prefix"));
  template.setSuffix(options.getProperty("suffix"));
  template.setSeparator(options.getProperty("separator"));
  if (engine.getMode() == Mode.RowBased) {
    FilteredRows filteredRows=engine.getAllFilteredRows();
    RowVisitor visitor=template.getRowVisitor(writer,limit);
    if (sortingJson != null) {
      try {
        SortingRowVisitor srv=new SortingRowVisitor(visitor);
        srv.initializeFromJSON(project,sortingJson);
        if (srv.hasCriteria()) {
          visitor=srv;
        }
      }
 catch (      JSONException e) {
        e.printStackTrace();
      }
    }
    filteredRows.accept(project,visitor);
  }
 else {
    FilteredRecords filteredRecords=engine.getFilteredRecords();
    RecordVisitor visitor=template.getRecordVisitor(writer,limit);
    if (sortingJson != null) {
      try {
        SortingRecordVisitor srv=new SortingRecordVisitor(visitor);
        srv.initializeFromJSON(project,sortingJson);
        if (srv.hasCriteria()) {
          visitor=srv;
        }
      }
 catch (      JSONException e) {
        e.printStackTrace();
      }
    }
    filteredRecords.accept(project,visitor);
  }
}
