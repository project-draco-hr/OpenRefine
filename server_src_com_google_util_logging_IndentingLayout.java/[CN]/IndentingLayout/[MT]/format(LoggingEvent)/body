{
  String message=event.getRenderedMessage();
  if (message == null) {
    return "";
  }
  if (message.length() < 2) {
    return message;
  }
  char leader=message.charAt(0);
  char secondLeader=message.charAt(1);
  if ((leader == '<') && (secondLeader == ' ') && (this.indentation > 0)) {
    this.indentation--;
  }
  StringBuffer buf=new StringBuffer(256);
  Date date=new Date();
  long now=date.getTime();
  calendar.setTime(date);
  long delta=0;
  if (previousTime > 0) {
    delta=now - previousTime;
  }
  previousTime=now;
  int hour=calendar.get(Calendar.HOUR_OF_DAY);
  if (hour < 10) {
    buf.append('0');
  }
  buf.append(hour);
  buf.append(':');
  int mins=calendar.get(Calendar.MINUTE);
  if (mins < 10) {
    buf.append('0');
  }
  buf.append(mins);
  buf.append(':');
  int secs=calendar.get(Calendar.SECOND);
  if (secs < 10) {
    buf.append('0');
  }
  buf.append(secs);
  buf.append('.');
  int millis=(int)(now % 1000);
  if (millis < 100) {
    buf.append('0');
  }
  if (millis < 10) {
    buf.append('0');
  }
  buf.append(millis);
  buf.append(" [");
  String context=((String)event.getMDC("LogEvent"));
  if (context == null) {
    context=event.getLoggerName();
  }
  if (context.length() < CONTEXT_SIZE) {
    pad(buf,CONTEXT_SIZE - context.length(),' ');
    buf.append(context);
  }
 else {
    buf.append("..");
    buf.append(context.substring(context.length() - CONTEXT_SIZE + 2));
  }
  buf.append("] ");
  pad(buf,indentation,' ');
  buf.append(message);
  buf.append(" (");
  buf.append(delta);
  buf.append("ms)\n");
  if ((leader == '>') && (secondLeader == ' ')) {
    indentation++;
  }
  return buf.toString();
}
