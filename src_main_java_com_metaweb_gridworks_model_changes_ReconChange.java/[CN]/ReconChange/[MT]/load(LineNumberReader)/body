{
  ReconConfig newReconConfig=null;
  ReconStats newReconStats=null;
  ReconConfig oldReconConfig=null;
  ReconStats oldReconStats=null;
  String commonColumnName=null;
  CellChange[] cellChanges=null;
  String line;
  while ((line=reader.readLine()) != null && !"/ec/".equals(line)) {
    int equal=line.indexOf('=');
    CharSequence field=line.subSequence(0,equal);
    String value=line.substring(equal + 1);
    if ("newReconConfig".equals(field)) {
      newReconConfig=ReconConfig.reconstruct(ParsingUtilities.evaluateJsonStringToObject(value));
    }
 else     if ("newReconStats".equals(field)) {
      newReconStats=ReconStats.reconstruct(ParsingUtilities.evaluateJsonStringToObject(value));
    }
 else     if ("oldReconConfig".equals(field)) {
      oldReconConfig=ReconConfig.reconstruct(ParsingUtilities.evaluateJsonStringToObject(value));
    }
 else     if ("oldReconStats".equals(field)) {
      oldReconStats=ReconStats.reconstruct(ParsingUtilities.evaluateJsonStringToObject(value));
    }
 else     if ("commonColumnName".equals(field)) {
      commonColumnName=value;
    }
 else     if ("cellChangeCount".equals(field)) {
      int cellChangeCount=Integer.parseInt(value);
      cellChanges=new CellChange[cellChangeCount];
      for (int i=0; i < cellChangeCount; i++) {
        cellChanges[i]=CellChange.load(reader);
      }
    }
  }
  ReconChange change=new ReconChange(cellChanges,commonColumnName,newReconConfig,newReconStats);
  change._oldReconConfig=oldReconConfig;
  change._oldReconStats=oldReconStats;
  return change;
}
