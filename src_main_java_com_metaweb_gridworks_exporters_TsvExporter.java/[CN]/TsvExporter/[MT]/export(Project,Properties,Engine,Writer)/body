{
  boolean first=true;
  for (  Column column : project.columnModel.columns) {
    if (first) {
      first=false;
    }
 else {
      writer.write("\t");
    }
    writer.write(column.getHeaderLabel());
  }
  writer.write("\n");
{
    RowVisitor visitor=new RowVisitor(){
      Writer writer;
      public RowVisitor init(      Writer writer){
        this.writer=writer;
        return this;
      }
      public boolean visit(      Project project,      int rowIndex,      Row row,      boolean contextual){
        boolean first=true;
        try {
          for (          Column column : project.columnModel.columns) {
            if (first) {
              first=false;
            }
 else {
              writer.write("\t");
            }
            int cellIndex=column.getCellIndex();
            if (cellIndex < row.cells.size()) {
              Cell cell=row.cells.get(cellIndex);
              if (cell != null && cell.value != null) {
                Object v=cell.value;
                writer.write(v instanceof String ? ((String)v) : v.toString());
              }
            }
          }
          writer.write("\n");
        }
 catch (        IOException e) {
        }
        return false;
      }
    }
.init(writer);
    FilteredRows filteredRows=engine.getAllFilteredRows(true);
    filteredRows.accept(project,visitor);
  }
}
