{
  TransposedNode tnode=null;
  TransposedNode parentNode=context.parent == null ? null : context.parent.transposedNode;
  FreebaseProperty property=context.parent == null ? null : context.link.property;
  if (node instanceof CellNode) {
    CellNode node2=(CellNode)node;
    Column column=project.columnModel.getColumnByName(node2.columnName);
    Cell cell=row.getCell(column.getCellIndex());
    if (cell != null && !ExpressionUtils.isBlank(cell.value)) {
      context.count++;
      if (context.limit > 0 && context.count > context.limit) {
        return;
      }
      tnode=nodeFactory.transposeCellNode(parentNode,property,node2,cell);
    }
  }
 else {
    if (node instanceof AnonymousNode) {
      tnode=nodeFactory.transposeAnonymousNode(parentNode,property,(AnonymousNode)node);
    }
 else     if (node instanceof FreebaseTopicNode) {
      tnode=nodeFactory.transposeTopicNode(parentNode,property,(FreebaseTopicNode)node);
    }
 else     if (node instanceof ValueNode) {
      tnode=nodeFactory.transposeValueNode(parentNode,property,(ValueNode)node);
    }
  }
  if (tnode != null) {
    context.transposedNode=tnode;
    context.nullifySubContextNodes();
  }
  if (node instanceof NodeWithLinks && context.transposedNode != null) {
    NodeWithLinks node2=(NodeWithLinks)node;
    int linkCount=node2.getLinkCount();
    for (int i=0; i < linkCount; i++) {
      descend(project,protograph,nodeFactory,row,node2.getLink(i).getTarget(),context.subContexts.get(i));
    }
  }
}
