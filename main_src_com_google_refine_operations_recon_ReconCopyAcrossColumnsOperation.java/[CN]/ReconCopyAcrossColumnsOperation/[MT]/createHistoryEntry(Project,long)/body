{
  Engine engine=createEngine(project);
  final Column fromColumn=project.columnModel.getColumnByName(_fromColumnName);
  final List<Column> toColumns=new ArrayList<Column>(_toColumnNames.length);
  for (  String c : _toColumnNames) {
    Column toColumn=project.columnModel.getColumnByName(c);
    if (toColumn != null) {
      toColumns.add(toColumn);
    }
  }
  final Set<Recon.Judgment> judgments=new HashSet<Recon.Judgment>(_judgments.length);
  for (  String j : _judgments) {
    judgments.add(Recon.stringToJudgment(j));
  }
  final List<CellChange> cellChanges=new ArrayList<CellChange>(project.rows.size());
  if (fromColumn != null && toColumns.size() > 0) {
    final Map<Object,Recon> cellValueToRecon=new HashMap<Object,Recon>();
    FilteredRows filteredRows=engine.getAllFilteredRows();
    try {
      filteredRows.accept(project,new RowVisitor(){
        @Override public void start(        Project project){
        }
        @Override public void end(        Project project){
        }
        @Override public boolean visit(        Project project,        int rowIndex,        Row row){
          Cell cell=row.getCell(fromColumn.getCellIndex());
          if (cell != null && cell.value != null && cell.recon != null) {
            if (judgments.contains(cell.recon.judgment)) {
              cellValueToRecon.put(cell.value,cell.recon);
            }
          }
          return false;
        }
      }
);
      filteredRows.accept(project,new RowVisitor(){
        @Override public void start(        Project project){
        }
        @Override public void end(        Project project){
        }
        @Override public boolean visit(        Project project,        int rowIndex,        Row row){
          for (          Column column : toColumns) {
            int cellIndex=column.getCellIndex();
            Cell cell=row.getCell(cellIndex);
            if (cell != null && cell.value != null) {
              Recon reconToCopy=cellValueToRecon.get(cell.value);
              boolean judged=cell.recon != null && cell.recon.judgment != Judgment.None;
              if (reconToCopy != null && (!judged || _applyToJudgedCells)) {
                Cell newCell=new Cell(cell.value,reconToCopy);
                CellChange cellChange=new CellChange(rowIndex,cellIndex,cell,newCell);
                cellChanges.add(cellChange);
              }
            }
          }
          return false;
        }
      }
);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  String description="Copy " + cellChanges.size() + " recon judgments from column "+ _fromColumnName+ " to "+ StringUtils.join(_toColumnNames);
  return new HistoryEntry(historyEntryID,project,description,this,new MassChange(cellChanges,false));
}
