{
  Engine engine=createEngine(project);
  Column column=project.columnModel.getColumnByCellIndex(_cellIndex);
  if (column == null) {
    throw new Exception("No column corresponding to cell index " + _cellIndex);
  }
  List<ReconEntry> entries=new ArrayList<ReconEntry>(project.rows.size());
  FilteredRows filteredRows=engine.getAllFilteredRows(false);
  filteredRows.accept(project,new RowVisitor(){
    int cellIndex;
    List<ReconEntry> entries;
    public RowVisitor init(    int cellIndex,    List<ReconEntry> entries){
      this.cellIndex=cellIndex;
      this.entries=entries;
      return this;
    }
    @Override public boolean visit(    Project project,    int rowIndex,    Row row,    boolean contextual){
      if (cellIndex < row.cells.size()) {
        Cell cell=row.cells.get(cellIndex);
        if (cell.value != null) {
          entries.add(new ReconEntry(rowIndex,cell));
        }
      }
      return false;
    }
  }
.init(_cellIndex,entries));
  String description="Reconcile " + entries.size() + " cells in column "+ column.getHeaderLabel()+ " to type "+ _typeID;
  return new ReconProcess(project,description,entries);
}
