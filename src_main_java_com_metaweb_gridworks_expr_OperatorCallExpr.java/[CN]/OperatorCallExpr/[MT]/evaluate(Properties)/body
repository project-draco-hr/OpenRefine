{
  Object[] args=new Object[_args.length];
  for (int i=0; i < _args.length; i++) {
    args[i]=_args[i].evaluate(bindings);
  }
  if (args.length == 2) {
    if (args[0] != null && args[1] != null) {
      if (args[0] instanceof Number && args[1] instanceof Number) {
        if ("+".equals(_op)) {
          return ((Number)args[0]).doubleValue() + ((Number)args[1]).doubleValue();
        }
 else         if ("-".equals(_op)) {
          return ((Number)args[0]).doubleValue() - ((Number)args[1]).doubleValue();
        }
 else         if ("*".equals(_op)) {
          return ((Number)args[0]).doubleValue() * ((Number)args[1]).doubleValue();
        }
 else         if ("/".equals(_op)) {
          return ((Number)args[0]).doubleValue() / ((Number)args[1]).doubleValue();
        }
 else         if (">".equals(_op)) {
          return ((Number)args[0]).doubleValue() > ((Number)args[1]).doubleValue();
        }
 else         if (">=".equals(_op)) {
          return ((Number)args[0]).doubleValue() >= ((Number)args[1]).doubleValue();
        }
 else         if ("<".equals(_op)) {
          return ((Number)args[0]).doubleValue() < ((Number)args[1]).doubleValue();
        }
 else         if ("<=".equals(_op)) {
          return ((Number)args[0]).doubleValue() <= ((Number)args[1]).doubleValue();
        }
      }
      if ("+".equals(_op)) {
        return args[0].toString() + args[1].toString();
      }
    }
    if ("==".equals(_op)) {
      if (args[0] != null) {
        return args[0].equals(args[1]);
      }
 else {
        return args[1] == null;
      }
    }
 else     if ("!=".equals(_op)) {
      if (args[0] != null) {
        return !args[0].equals(args[1]);
      }
 else {
        return args[1] != null;
      }
    }
  }
  return null;
}
