{
  Column column=project.columnModel.getColumnByName(_columnName);
  return new RowVisitor(){
    int cellIndex;
    List<CellChange> cellChanges;
    Map<String,Recon> sharedRecons=new HashMap<String,Recon>();
    Map<Long,Recon> dupReconMap=new HashMap<Long,Recon>();
    long historyEntryID;
    public RowVisitor init(    int cellIndex,    List<CellChange> cellChanges,    long historyEntryID){
      this.cellIndex=cellIndex;
      this.cellChanges=cellChanges;
      this.historyEntryID=historyEntryID;
      return this;
    }
    public boolean visit(    Project project,    int rowIndex,    Row row,    boolean includeContextual,    boolean includeDependent){
      Cell cell=row.getCell(cellIndex);
      if (cell != null) {
        Recon recon=null;
        if (_shareNewTopics) {
          String s=cell.value == null ? "" : cell.value.toString();
          if (sharedRecons.containsKey(s)) {
            recon=sharedRecons.get(s);
            recon.judgmentBatchSize++;
          }
 else {
            recon=new Recon(historyEntryID);
            recon.judgment=Judgment.New;
            recon.judgmentBatchSize=1;
            recon.judgmentAction="mass";
            sharedRecons.put(s,recon);
          }
        }
 else {
          long reconID=cell.recon == null ? 0 : cell.recon.id;
          if (dupReconMap.containsKey(reconID)) {
            recon=dupReconMap.get(reconID);
            recon.judgmentBatchSize++;
          }
 else {
            recon=cell.recon == null ? new Recon(historyEntryID) : cell.recon.dup(historyEntryID);
            recon.match=null;
            recon.matchRank=-1;
            recon.judgment=Judgment.New;
            recon.judgmentBatchSize=1;
            recon.judgmentAction="mass";
            dupReconMap.put(reconID,recon);
          }
        }
        Cell newCell=new Cell(cell.value,recon);
        CellChange cellChange=new CellChange(rowIndex,cellIndex,cell,newCell);
        cellChanges.add(cellChange);
      }
      return false;
    }
  }
.init(column.getCellIndex(),cellChanges,historyEntryID);
}
