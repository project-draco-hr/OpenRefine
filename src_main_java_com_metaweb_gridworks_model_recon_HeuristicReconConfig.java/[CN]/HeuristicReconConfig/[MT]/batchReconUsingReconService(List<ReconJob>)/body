{
  List<Recon> recons=new ArrayList<Recon>(jobs.size());
  for (int i=0; i < jobs.size(); i++) {
    HeuristicReconJob job=(HeuristicReconJob)jobs.get(i);
    Recon recon=null;
    try {
      StringBuffer sb=new StringBuffer();
      sb.append(s_reconService + "?limit=5&q=");
      sb.append(ParsingUtilities.encode(job.code));
      URL url=new URL(sb.toString());
      URLConnection connection=url.openConnection();
      connection.setConnectTimeout(5000);
      connection.connect();
      InputStream is=connection.getInputStream();
      try {
        String s=ParsingUtilities.inputStreamToString(is);
        JSONArray a=ParsingUtilities.evaluateJsonStringToArray(s);
        recon=createReconFromReconResults(job.text,a);
      }
  finally {
        is.close();
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    if (recon == null) {
      recon=new Recon();
    }
    recons.add(recon);
  }
  return recons;
}
