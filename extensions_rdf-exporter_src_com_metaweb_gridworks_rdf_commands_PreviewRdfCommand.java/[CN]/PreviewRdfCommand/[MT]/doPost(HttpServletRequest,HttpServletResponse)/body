{
  try {
    Project project=getProject(request);
    Engine engine=getEngine(request,project);
    FilteredRows filteredRows=engine.getAllFilteredRows();
    response.setCharacterEncoding("UTF-8");
    response.setHeader("Content-Type","application/json");
    String jsonString=request.getParameter("schema");
    JSONObject json=ParsingUtilities.evaluateJsonStringToObject(jsonString);
    RdfSchema schema=RdfSchema.reconstruct(json);
    Model model=ModelFactory.createDefaultModel();
    URI baseUri=schema.getBaseUri();
    Node root=schema.getRoot();
    Resource[] blanks=new Resource[schema.get_blanks().size()];
    for (int i=0; i < blanks.length; i++) {
      blanks[i]=model.createResource();
    }
    RowVisitor visitor=new RdfRowVisitor(model,baseUri,root,blanks,20);
    filteredRows.accept(project,visitor);
    StringWriter sw=new StringWriter();
    model.write(sw,"N3");
    JSONWriter writer=new JSONWriter(response.getWriter());
    writer.object();
    writer.key("v");
    writer.value(sw.getBuffer().toString());
    writer.endObject();
  }
 catch (  Exception e) {
    respondException(response,e);
  }
}
